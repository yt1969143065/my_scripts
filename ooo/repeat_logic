######################################################################################
#  REPEAT $counter, $insn_num                                                        #
######################################################################################
# Q_DEPTH
# push_pt_reg
# pop_pt_reg
# rem_insn_num_reg
#
# repeat_mode_reg
# repeat_addr_reg
# repeat_counter_reg
# repeat_all_insn_num_reg
# repeat_rem_insn_num_reg
#
# repeat_in_queue_reg
# repeat_stop_fetch_reg
#
# repeat_left_partial_reg
# repeat_partial_come_reg
#
# repeat_ignore: $counter=0/1 $insn_num=0
# repeat_sequence_over = repeat_mode AND 
#                        valid_dispatch AND 
#                        repeat_rem_insn_num_reg = pop_insn_num

#------------------------------------------------------------------------------------
# cycle when a REPEAT be dispathed
#------------------------------------------------------------------------------------
repeat_valid = a_repeat_insn AND (NOT repeat_ignore)

WHEN repeat_valid:
	repeat_mode_reg         <= "1"           
	repeat_addr_reg         <= repeat_pc + "4"
	repeat_counter_reg      <= counter       
	repeat_all_insn_num_reg <= insn_num      
	repeat_rem_insn_num_reg <= insn_num      

# repeat_in_rem: repeat_sequence already in queue 
repeat_in_rem = repeat_valid AND insn_num < rem_insn_num_reg

WHEN repeat_in_rem:
	rem_insn_num_reg        <= insn_num
	push_pt_reg             <= push_pt_reg - (insn_num - rem_insn_num)
	repeat_in_queue_reg     <= "1"
	repeat_stop_fetch_reg   <= "1"

# repeat_in_que: repeat_sequence partially in queue but completetly finally
repeat_in_que  = repeat_valid AND 
                 insn_num > rem_insn_num_reg AND 
                 insn_num <= Q_DEPTH

WHEN repeat_in_que:
	repeat_in_queue_reg     <= "1"

#------------------------------------------------------------------------------------
# cycle when a repeat_sequence finish a non-last roll dispatch
#------------------------------------------------------------------------------------
repeat_non_last_roll = repeat_counter_reg > "1"

# repeat_in_queue_reg TRUE
repeat_q_back = repeat_sequence_over AND 
                repeat_non_last_roll AND 
                repeat_in_queue_reg

WHEN repeat_q_back:
	repeat_counter_reg      <= repeat_counter_reg - "1"
	repeat_rem_insn_num_reg <= repeat_all_insn_num_reg
	rem_insn_num_reg        <= repeat_all_insn_num_reg
	pop_pt_reg              <= pop_pt_reg - repeat_all_insn_num_reg

# repeat_in_queue_reg FALSE
repeat_q_next = repeat_sequence_over AND 
                repeat_non_last_roll AND 
                NOT repeat_in_queue_reg

WHEN repeat_q_next:
	repeat_counter_reg      <= repeat_counter_reg - "1"
	repeat_rem_insn_num_reg <= repeat_all_insn_num_reg

#------------------------------------------------------------------------------------
# cycle when a repeat_sequence finish a last roll dispatch
#------------------------------------------------------------------------------------
repeat_last_roll = repeat_counter_reg = "1"

repeat_finish = repeat_last_roll AND repeat_sequence_over

WHEN repeat_finish:
    repeat_mode_reg         <= "0"
	repeat_counter_reg      <= repeat_counter_reg - "1"
	repeat_rem_insn_num_reg <= "0"
	repeat_in_queue_reg     <= "0"

# thers is no need to clear repeat_addr_reg 
# thers is no need to clear repeat_all_insn_num_reg 

#------------------------------------------------------------------------------------
# cycle to clean repeat_stop_fetch
#------------------------------------------------------------------------------------
repeat_last_butone_roll = repeat_counter_reg = "2"
clear_repeat_stop_fetch = repeat_stop_fetch_reg AND
                          repeat_last_butone_roll AND
                          repeat_sequence_over
WHEN clear_repeat_stop_fetch:
	repeat_stop_fetch_reg   <= "0"

#------------------------------------------------------------------------------------
# REPEAT deal when interrupt
#------------------------------------------------------------------------------------
WHEN interrupt:
	SAVE repeat_mode_reg
	SAVE repeat_addr_reg
	SAVE repeat_counter_reg
	SAVE repeat_all_insn_num_reg
	SAVE repeat_rem_insn_num_reg
	repeat_mode_reg         <= "0"
	repeat_counter_reg      <= "0"
	repeat_rem_insn_num_reg <= "0"
	repeat_in_queue_reg     <= "0"
	repeat_stop_fetch_reg   <= "0"
   
WHEN return_from_interrupt:
	repeat_mode_reg         <= repeat_mode_saved
	repeat_addr_reg         <= repeat_addr_saved
	repeat_counter_reg      <= repeat_counter_saved
	repeat_all_insn_num_reg <= repeat_all_insn_num_saved
	repeat_rem_insn_num_reg <= repeat_rem_insn_num_saved
	repeat_in_queue_reg     <= "0"
	repeat_stop_fetch_reg   <= "0"
	repeat_left_partial_reg <= repeat_all_insn_num_saved <= Q_DEPTH AND
                               repeat_counter_saved > "2" AND
                               repeat_mode_saved 

# repeat_left_partial insn comes set repeat_in_queue_reg
left_partial_come_after_int = repeat_left_partial_reg AND
                              repeat_tail_come
WHEN left_partial_come_afer_int:
	repeat_partial_come_reg <= "1"
                                              


#------------------------------------------------------------------------------------
# fetch request
#------------------------------------------------------------------------------------
fall_fetch_req = rem_insn_num <= Q_EMIT_NUM AND
                 NOT wait_fetch_resp_reg AND
                 NOT jump_fetch_req AND
                 NOT resart_fetch_req AND
                 NOT repeat_stop_fetch_reg

from_repeat_addr = repeat_non_last_roll AND 
                   repeat_rem_insn_num_reg = rem_insn_num_reg  

fall_fetch_addr = repeat_addr_reg WHEN from_repeat_addr ELSE
                  next_fetch_addr

#------------------------------------------------------------------------------------
# fetch response
#------------------------------------------------------------------------------------
# en_fetch_in
# addr_fetch_in
# line_fetch_in
en_fetch_receive = NOT restart_fetch_req AND
                   NOT jump_fetch_req AND
                   NOT rem_insn_num_reg > Q_EMIT_NUM AND
                   NOT (restore AND rem_insn_restore > Q_EMIT_NUM) AND 
                   NOT repeat_stop_fetch_reg
en_fetch_resp = en_fetch_in AND
                en_fetch_receive
                
repeat_max_push_insn_num = repeat_rem_insn_num_reg - rem_insn_num_reg
repeat_tail_come = en_fetch_resp AND
                   rem_insn_num_reg < repeat_rem_insn_num_reg AND
                   fetch_insn_num >= repeat_max_push_insn_num

fetch_push_insn_num = repeat_max_push_insn_num WHEN repeat_tail_come ELSE
                      fetch_insn_num

WHEN en_fetch_resp:
	push_pt_reg             <= push_pt_reg      + fetch_push_insn_num
	rem_insn_num_reg        <= rem_insn_num_reg + fetch_push_insn_num

# when repeat_sequence all in queue, stop fetch
set_repeat_stop_fetch = (repeat_in_queue_reg  OR repeat_partial_come_reg) AND
                        repeat_tail_come
WHEN set_repeat_stop_fetch:
	repeat_stop_fetch_reg   <= "1"

# re-set repeat_in_queue after return-from-interrupt
reset_repeat_in_queue = repeat_partial_come_reg AND
                        repeat_tail_come

WHEN reset_repeat_in_queue:
	repeat_in_queue_reg     <= "1"
	repeat_partial_come_reg <= "0"

